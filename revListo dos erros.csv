project;merge commit;className;method;left modifications;has_build;left deletions;right modifications;right deletions
druid;05168808c278c080c59c19e858d9471b316cd1f5;com.metamx.druid.loading.S3SegmentPusher;DataSegment com.metamx.druid.loading.S3SegmentPusher.push(File, DataSegment);[66, 118, 139, 110];True;[];[105, 125];[]
webbit;74d2d2b87704d003acacb34e4ca8fb5f897b938f;org.webbitserver.netty.WebSocketClient; void org.webbitserver.netty.WebSocketClient.adjustPipelineToWebSocket(ChannelHandlerContext, MessageEvent, ChannelHandler, ChannelHandler);[260];True;[];[262];[]
resty-gwt;867b917c43c32acbdcac55767e7f04334006c866;org.fusesource.restygwt.rebind.DirectRestServiceInterfaceClassCreator;String org.fusesource.restygwt.rebind.DirectRestServiceInterfaceClassCreator.getMethodCallback(JMethod);[83, 84, 85];True;[];[86, 87, 88, 89, 90, 91];[]
OpenTripPlanner;4c506dce43775704919d084f0acfba86d251bf4a;org.opentripplanner.routing.spt.MultiShortestPathTree;boolean org.opentripplanner.routing.spt.MultiShortestPathTree.dominates(State, State);[144, 146, 147, 148, 149, 152, 141];True;[];[123];[]
storm;ad2be678831b3b060229fd936e3908110162b7ac;org.apache.storm.kafka.spout.KafkaSpoutConfig;void org.apache.storm.kafka.spout.KafkaSpoutConfig.KafkaSpoutConfig(Builder<K,V>);[];True;[];[435, 436, 437, 438, 439, 440, 441, 430, 431];[]
storm;bd1f5c54752f67b484a83c26667331234234d3a3;org.apache.storm.kafka.spout.KafkaSpout;boolean org.apache.storm.kafka.spout.KafkaSpout.emitTupleIfNotEmitted(ConsumerRecord<K,V>);[305, 306, 307, 312];True;[];[316, 319];[]
jsoup;a8b6982de98ff76ef254031d7152fff57f6bf941;org.jsoup.helper.HttpConnection; Response org.jsoup.helper.HttpConnection.execute(Connection.Request, Response);[584, 585, 586];True;[];[544, 547];[]
jsoup;fee4762322f85a1109edd75ccb67f38cf5008c80;org.jsoup.helper.HttpConnection; HttpURLConnection org.jsoup.helper.HttpConnection.createConnection(Connection.Request);[609, 610, 611, 612, 613, 614];True;[];[617];[]
jsoup;a8b6982de98ff76ef254031d7152fff57f6bf941;org.jsoup.helper.HttpConnection; Response org.jsoup.helper.HttpConnection.execute(Connection.Request, Response);[584, 585, 586];True;[];[544, 547];[]
okhttp;35166168529bd27281685e56a0a122eff44460e9;realistic.copyWithDefaults.source.com.squareup.okhttp.OkHttpClient; OkHttpClient realistic.copyWithDefaults.source.com.squareup.okhttp.OkHttpClient.copyWithDefaults();[277, 293];True;[];[287];[]
pushy;58901c846e4f0874977c5aabbc34bcb4de3670e0;com.relayrides.pushy.apns.PushManager; void com.relayrides.pushy.apns.PushManager.handleConnectionFailure(ApnsConnection<T>, Throwable);[481, 482, 483, 484, 485, 476, 478];True;[];[490];[]
pushy;58901c846e4f0874977c5aabbc34bcb4de3670e0;com.relayrides.pushy.apns.PushManager; void com.relayrides.pushy.apns.PushManager.handleConnectionClosure(ApnsConnection<T>);[520, 510];True;[];[515, 500, 502, 503];[]
java-faker;ca42fcfaf45cae1754c58e02e1d5d2a58ec03561;com.github.javafaker.Faker;void com.github.javafaker.Faker.Faker(Locale, Random);[69, 59];True;[];[70];[]
swagger-core;e7fea7c4889dbdd6a4e0b2d059c8aa0f126ab1c2;io.swagger.jaxrs2.OperationParser; Optional io.swagger.jaxrs2.OperationParser.getSchemaFromAnnotation(io.swagger.oas.annotations.media.Schema);[240, 241, 234, 235, 236, 237, 238, 239];True;[];[244, 187, 188];[]
dropwizard;ddd15a681bf42360337844412cae4aba1556eb88;io.dropwizard.setup.Bootstrap; void io.dropwizard.setup.Bootstrap.Bootstrap(Application<T>);[71];True;[];[65, 67, 68, 69];[]
logback;542843fd04a793fb9e0eea0c84d199e66d7c15af;ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase; void ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase.start();[45];True;[];[52, 53, 54, 55, 56];[]
SimianArmy;345ad9513aafff397050d613fa87ad06ddffe99d;com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext; InstanceJanitor com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext.getInstanceJanitor();[227, 228, 229, 230];True;[];[232, 233, 234, 235, 237, 238];[]
SimianArmy;c39c19bc6b9231601f6bc7358e638a99adf37e0d;com.netflix.simianarmy.basic.BasicSimianArmyContext; void com.netflix.simianarmy.basic.BasicSimianArmyContext.BasicSimianArmyContext(String);[128, 129, 130, 131, 115, 132, 133, 134, 135, 141, 126, 127];True;[];[112, 113, 114, 115, 110, 111];[]
alluxio;dafe76c90024a915224264b4862b33f40cb8478c;tachyon.hadoop.HdfsFileInputStream; void tachyon.hadoop.HdfsFileInputStream.HdfsFileInputStream(TachyonFS, int, Path, Configuration, int);[44, 45];True;[];[52, 53, 56, 58];[]
voldemort;b30fdfebe30c9b6e37b9fbc3fec0ff74cd19f997;voldemort.VoldemortClientShell; void voldemort.VoldemortClientShell.VoldemortClientShell(ClientConfig, String, BufferedReader, PrintStream, PrintStream);[123];True;[];[128, 127];[]
RxJava;a40a4130edcdadc2340da5787ca30353018173f2;rx.internal.operators.OperatorMulticast; void rx.internal.operators.OperatorMulticast.connect(Action1<?superSubscription>);[94];True;[];[128, 129, 131, 117, 118, 119, 120, 121, 122, 124, 125];[]
elasticsearch-river-mongodb;3d4f99516ba3177f7d88a1f600923138a8b77cc8;org.elasticsearch.river.mongodb.MongoDBRiverDefinition; MongoDBRiverDefinition org.elasticsearch.river.mongodb.MongoDBRiverDefinition.parseSettings(String, String, RiverSettings, ScriptService);[714, 699, 683, 717, 686, 703];True;[];[576, 515, 582, 617, 490, 635, 670];[]
elasticsearch-river-mongodb;3d4f99516ba3177f7d88a1f600923138a8b77cc8;org.elasticsearch.river.mongodb.Slurper; boolean org.elasticsearch.river.mongodb.Slurper.assignCollections();[288, 289, 290, 322, 291, 292, 293, 294, 295, 297, 298, 286, 287];True;[];[315, 331, 302];[]
elasticsearch-river-mongodb;3d4f99516ba3177f7d88a1f600923138a8b77cc8;org.elasticsearch.river.mongodb.MongoDBRiverDefinition; MongoDBRiverDefinition org.elasticsearch.river.mongodb.MongoDBRiverDefinition.parseSettings(String, String, RiverSettings, ScriptService);[714, 699, 683, 717, 686, 703];True;[];[576, 515, 582, 617, 490, 635, 670];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Indexer; Timestamp org.elasticsearch.river.mongodb.Indexer.applyAdvancedTransformation(QueueEntry, String);[321];True;[];[288, 358, 331, 287];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Indexer; Timestamp org.elasticsearch.river.mongodb.Indexer.processBlockingQueue(QueueEntry);[176];True;[];[161, 198, 201, 189];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Slurper; void org.elasticsearch.river.mongodb.Slurper.run();[105];True;[];[145, 148];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Slurper; void org.elasticsearch.river.mongodb.Slurper.addToStream(Operation, Timestamp<?>, DBObject, String);[752, 747, 748, 751];True;[];[736, 737, 738, 739, 740, 741, 742, 743];[]
hector;213f7887ea70eabdf0705cf8454de29af89e8c38;me.prettyprint.cassandra.connection.HConnectionManager; void me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(Operation<?>);[267, 268];True;[];[200];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.index.TransportIndexAction; WriteResult org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(IndexRequest, IndexShard, MappingUpdatedAction);[196];True;[];[201];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.support.replication.ReplicationOperationTests; void org.elasticsearch.action.support.replication.ReplicationOperationTests.testReplication();[106, 108, 125, 126];True;[];[116, 103];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.IndexSettings; void org.elasticsearch.index.IndexSettings.IndexSettings(IndexMetaData, Settings, Predicate<String>, IndexScopedSettings);[238];True;[];[246, 269];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.bulk.TransportShardBulkAction; Tuple org.elasticsearch.action.bulk.TransportShardBulkAction.update(IndexMetaData, BulkShardRequest, IndexShard, long[], VersionType[], Translog.Location, int, BulkItemRequest);[268, 255];True;[];[244, 249, 266, 254];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.support.replication.TransportReplicationAction; void org.elasticsearch.action.support.replication.TransportReplicationAction.doRun();[455, 458, 460];True;[];[457, 459];[]
jsoup;a8b6982de98ff76ef254031d7152fff57f6bf941;org.jsoup.helper.HttpConnection; Response org.jsoup.helper.HttpConnection.execute(Connection.Request, Response);[584, 585, 586];True;[];[544, 547];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.engine.InternalEngineTests; void org.elasticsearch.index.engine.InternalEngineTests.testRecoverFromForeignTranslog();[2091];True;[];[2124];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.engine.InternalEngineTests; void org.elasticsearch.index.engine.InternalEngineTests.testRecoverFromForeignTranslog();[2091];True;[];[2124];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.cluster.metadata.MetaDataCreateIndexService; void org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.createIndex(CreateIndexClusterStateUpdateRequest, ActionListener<ClusterStateUpdateResponse>);[315];True;[];[304, 305, 309, 310, 312, 346, 300];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.update.TransportUpdateAction; void org.elasticsearch.action.update.TransportUpdateAction.shardOperation(UpdateRequest, ActionListener<UpdateResponse>, int);[224, 185, 254];True;[];[192, 249, 250];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.delete.TransportDeleteAction; WriteResult org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(DeleteRequest, IndexShard);[136];True;[];[140];[]
elasticsearch;0404db65e3497452886173957729c8e82cfd4a03;org.elasticsearch.test.ESSingleNodeTestCase; Node org.elasticsearch.test.ESSingleNodeTestCase.newNode();[171];True;[];[173, 174];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTest; void org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTest.testSynonymsAnalysis();[65, 66, 67, 68, 69, 70, 71, 76];True;[];[73, 75];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests; void realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests.testQueryModeCommonGramsAnalysis();[229];True;[];[226, 228];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests; void realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests.testQueryModeCommonGramsAnalysis();[229];True;[];[226, 228];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;org.elasticsearch.index.analysis.KuromojiAnalysisTests; AnalysisService org.elasticsearch.index.analysis.KuromojiAnalysisTests.createAnalysisService();[196, 197, 198, 199, 200, 201, 202, 206];True;[];[204, 207];[]
dropwizard;ddd15a681bf42360337844412cae4aba1556eb88;io.dropwizard.setup.Bootstrap; void io.dropwizard.setup.Bootstrap.Bootstrap(Application<T>);[71];True;[];[65, 67, 68, 69];[]
spring-boot;958a0a45f164601d01cb706c19f22ed3e25eff56;spring-boot-autoconfigure.src.main.java.org.springframework.boot.autoconfigure.MongoProperties;Builder org.springframework.boot.autoconfigure.MongoProperties.builder(MongoClientOptions);[272];True;[];[261, 262, 263, 264, 265, 266, 267, 268, 271];[]
spring-boot;3444ebbc05b99a164474c14d6a6784f749514428;spring-boot.src.main.java.org.springframework.boot.context.SpringBootServletInitializer; WebApplicationContext org.springframework.boot.context.SpringBootServletInitializer.createRootApplicationContext(ServletContext);[99];True;[];[121, 123];[]
spring-boot;3444ebbc05b99a164474c14d6a6784f749514428;spring-boot.src.main.java.org.springframework.boot.context.SpringBootServletInitializer; WebApplicationContext org.springframework.boot.context.SpringBootServletInitializer.createRootApplicationContext(ServletContext);[99];True;[];[121, 123];[]
spring-boot;fdd3f12ee0f92ac18844c08bf71df39feebb6673;spring-boot-autoconfigure.src.main.java.org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer; void org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(boolean);[114];True;[];[110];[]
spring-boot;2d4e68a9777601bfb8309c94d8b74bc21be80ad1;src.main.java.org.springframework.boot.context.embedded.TomcatEmbeddedServletContainerFactory; void src.main.java.org.springframework.boot.context.embedded.TomcatEmbeddedServletContainerFactory.customizeConnector(Connector);[240, 241, 242, 243, 244, 246, 247, 248, 249];True;[];[228];[]
