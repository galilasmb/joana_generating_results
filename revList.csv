project;merge commit;className;method;left modifications;has_build;left deletions;right modifications;right deletions
druid;05168808c278c080c59c19e858d9471b316cd1f5;com.metamx.druid.loading.S3SegmentPusher;DataSegment com.metamx.druid.loading.S3SegmentPusher.push(File, DataSegment);[66, 118, 139, 110];TRUE;[];[105, 125];[]
netty;193acdb36cd3da9bfc62dd69c4208dff3f0a2b1b;org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;Object org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder.decode(ChannelHandlerContext, Channel, ChannelBuffer);[358, 360];TRUE;[];[322, 374];[]
OpenTripPlanner;4c506dce43775704919d084f0acfba86d251bf4a;org.opentripplanner.routing.spt.MultiShortestPathTree;boolean org.opentripplanner.routing.spt.MultiShortestPathTree.dominates(State, State);[144, 146, 147, 148, 149, 152, 141];TRUE;[];[123];[]
webbit;74d2d2b87704d003acacb34e4ca8fb5f897b938f;org.webbitserver.netty.WebSocketClient; void org.webbitserver.netty.WebSocketClient.adjustPipelineToWebSocket(ChannelHandlerContext, MessageEvent, ChannelHandler, ChannelHandler);[260];TRUE;[];[262];[]
resty-gwt;867b917c43c32acbdcac55767e7f04334006c866;org.fusesource.restygwt.rebind.DirectRestServiceInterfaceClassCreator;String org.fusesource.restygwt.rebind.DirectRestServiceInterfaceClassCreator.getMethodCallback(JMethod);[83, 84, 85];TRUE;[];[86, 87, 88, 89, 90, 91];[]
storm;ad2be678831b3b060229fd936e3908110162b7ac;org.apache.storm.kafka.spout.KafkaSpout;void org.apache.storm.kafka.spout.KafkaSpout.open(Map, TopologyContext, SpoutOutputCollector);[];TRUE;[];[118, 102];[]
storm;ad2be678831b3b060229fd936e3908110162b7ac;org.apache.storm.kafka.spout.KafkaSpoutConfig;void org.apache.storm.kafka.spout.KafkaSpoutConfig.KafkaSpoutConfig(Builder<K,V>);[];TRUE;[];[435, 436, 437, 438, 439, 440, 441, 430, 431];[]
storm;ad2be678831b3b060229fd936e3908110162b7ac;org.apache.storm.kafka.spout.KafkaSpoutConfig; String org.apache.storm.kafka.spout.KafkaSpoutConfig.toString();[];TRUE;[];[515, 516, 521, 522];[]
storm;bd1f5c54752f67b484a83c26667331234234d3a3;org.apache.storm.kafka.spout.KafkaSpout;boolean org.apache.storm.kafka.spout.KafkaSpout.emitTupleIfNotEmitted(ConsumerRecord<K,V>);[305, 306, 307, 312];TRUE;[];[316, 319];[]
jsoup;a8b6982de98ff76ef254031d7152fff57f6bf941;org.jsoup.helper.HttpConnection; Response org.jsoup.helper.HttpConnection.execute(Connection.Request, Response);[584, 585, 586];TRUE;[];[544, 547];[]
jsoup;fee4762322f85a1109edd75ccb67f38cf5008c80;org.jsoup.helper.HttpConnection; HttpURLConnection org.jsoup.helper.HttpConnection.createConnection(Connection.Request);[609, 610, 611, 612, 613, 614];TRUE;[];[617];[]
jsoup;3f7d2c71dbbbb289c684f339874eed8ac2747fa0;org.jsoup.helper.HttpConnection; Response org.jsoup.helper.HttpConnection.execute(Connection.Request, Response);[456];TRUE;[];[483, 484, 485];[]
jsoup;a44e18aa3c1fcd25a68a5965f9490d8f7d026509;org.jsoup.nodes.TextNode; void org.jsoup.nodes.TextNode.outerHtmlHead(StringBuilder, int, Document.OutputSettings);[94];TRUE;[];[98];[]
retrofit;2b6c719c6645f8e48dca6d0047c752069d321bc4;retrofit.RestAdapter; Response retrofit.RestAdapter.logAndReplaceResponse(String, Response, long);[438];TRUE;[];[415];[]
retrofit;2b6c719c6645f8e48dca6d0047c752069d321bc4;retrofit.RestAdapter; Request retrofit.RestAdapter.logAndReplaceRequest(Request);[398];TRUE;[];[369];[]
retrofit;71f622ce51031b152a0be6ad5facfb27a654bf5a;retrofit.RequestBuilder; Request retrofit.RequestBuilder.build();[88];TRUE;[];[96, 97, 100, 95];[]
activiti;50d8e43eb5917c63abfbcdec1e68e510943f325a;org.activiti.engine.impl.persistence.entity.DeploymentEntityManager; void org.activiti.engine.impl.persistence.entity.DeploymentEntityManager.deleteDeployment(String, boolean);[107];TRUE;[];[114, 115, 116, 117];[]
activiti;bf46684ba62f5883673ea8fb0a14aecfe0aedea2;org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior; void org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior.execute(ActivityExecution);[112, 113, 114, 115, 116, 117, 110, 111];TRUE;[];[118, 125, 126, 127];[]
okhttp;1151c9853ccc3c9c3211c613b9b845b925f8c6a6;com.squareup.okhttp.internal.bytes.GzipSource; void com.squareup.okhttp.internal.bytes.GzipSource.consumeHeader(Deadline);[112];TRUE;[];[138];[]
okhttp;35166168529bd27281685e56a0a122eff44460e9;realistic.copyWithDefaults.source.com.squareup.okhttp.OkHttpClient; OkHttpClient realistic.copyWithDefaults.source.com.squareup.okhttp.OkHttpClient.copyWithDefaults();[277, 293];TRUE;[];[287];[]
HikariCP;1bca94af9ec625f21d1b58ff10efb5be71ab87a6;com.zaxxer.hikari.HikariConfig; void com.zaxxer.hikari.HikariConfig.validate();[577, 578, 579, 580, 581, 582];TRUE;[];[];[]
HikariCP;1bca94af9ec625f21d1b58ff10efb5be71ab87a6;com.zaxxer.hikari.HikariPool; void com.zaxxer.hikari.HikariPool.addConnection();[356, 372, 374, 365];TRUE;[];[339, 340, 341, 342, 343, 344, 345, 362, 346, 348];[]
pushy;58901c846e4f0874977c5aabbc34bcb4de3670e0;com.relayrides.pushy.apns.PushManager; void com.relayrides.pushy.apns.PushManager.handleConnectionFailure(ApnsConnection<T>, Throwable);[481, 482, 483, 484, 485, 476, 478];TRUE;[];[490];[]
pushy;58901c846e4f0874977c5aabbc34bcb4de3670e0;com.relayrides.pushy.apns.PushManager; void com.relayrides.pushy.apns.PushManager.handleConnectionClosure(ApnsConnection<T>);[520, 510];TRUE;[];[515, 500, 502, 503];[]
java-faker;ca42fcfaf45cae1754c58e02e1d5d2a58ec03561;com.github.javafaker.Faker;void com.github.javafaker.Faker.Faker(Locale, Random);[69, 59];TRUE;[];[70];[]
swagger-core;e7fea7c4889dbdd6a4e0b2d059c8aa0f126ab1c2;io.swagger.jaxrs2.OperationParser; Optional io.swagger.jaxrs2.OperationParser.getSchemaFromAnnotation(io.swagger.oas.annotations.media.Schema);[240, 241, 234, 235, 236, 237, 238, 239];TRUE;[];[244, 187, 188];[]
cucumber-jvm;4505c156b6267c1b760deec570ddbfe047b42aa9;cuke4duke.internal.java.JavaLanguage; void cuke4duke.internal.java.JavaLanguage.load(String);[38, 40];TRUE;[];[36];[]
dropwizard;ddd15a681bf42360337844412cae4aba1556eb88;io.dropwizard.setup.Bootstrap; void io.dropwizard.setup.Bootstrap.Bootstrap(Application<T>);[71];TRUE;[];[65, 67, 68, 69];[]
jenkins;48b2b951dfb3438999ceda330093cac82b857ce6;jenkins.slaves.DefaultJnlpSlaveReceiver; boolean jenkins.slaves.DefaultJnlpSlaveReceiver.handle(String, JnlpSlaveHandshake);[52];TRUE;[];[52, 56, 57];[]
logback;542843fd04a793fb9e0eea0c84d199e66d7c15af;ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase; void ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase.start();[45];TRUE;[];[52, 53, 54, 55, 56];[]
orientdb;a5ce3bcc0a1d196745c575ad6602019f7a6b86f8;com.orientechnologies.orient.core.Orient; Orient com.orientechnologies.orient.core.Orient.startup();[191];TRUE;[];[158];[]
SimianArmy;345ad9513aafff397050d613fa87ad06ddffe99d;com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext; InstanceJanitor com.netflix.simianarmy.basic.janitor.BasicJanitorMonkeyContext.getInstanceJanitor();[227, 228, 229, 230];TRUE;[];[232, 233, 234, 235, 237, 238];[]
SimianArmy;c39c19bc6b9231601f6bc7358e638a99adf37e0d;com.netflix.simianarmy.basic.BasicSimianArmyContext; void com.netflix.simianarmy.basic.BasicSimianArmyContext.BasicSimianArmyContext(String);[128, 129, 130, 131, 115, 132, 133, 134, 135, 141, 126, 127];TRUE;[];[112, 113, 114, 115, 110, 111];[]
alluxio;dafe76c90024a915224264b4862b33f40cb8478c;tachyon.hadoop.HdfsFileInputStream; void tachyon.hadoop.HdfsFileInputStream.HdfsFileInputStream(TachyonFS, int, Path, Configuration, int);[44, 45];TRUE;[];[52, 53, 56, 58];[]
voldemort;b30fdfebe30c9b6e37b9fbc3fec0ff74cd19f997;voldemort.VoldemortClientShell; void voldemort.VoldemortClientShell.VoldemortClientShell(ClientConfig, String, BufferedReader, PrintStream, PrintStream);[123];TRUE;[];[128, 127];[]
voldemort;4cc1c145819030c8e2baffe4c92383de14b8d880;voldemort.server.VoldemortConfig; void voldemort.server.VoldemortConfig.VoldemortConfig(Props);[359];TRUE;[];[448, 455];[]
libgdx;da27e2dae56be0a159e82231e5c3a5b83b099063;com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application; Lwjgl3Window com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.newWindow(ApplicationListener, Lwjgl3WindowConfiguration);[318];TRUE;[];[325];[]
libgdx;da27e2dae56be0a159e82231e5c3a5b83b099063;com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration; Lwjgl3ApplicationConfiguration com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration.copy(Lwjgl3ApplicationConfiguration);[96, 97, 98, 99];TRUE;[];[107];[]
RxJava;a40a4130edcdadc2340da5787ca30353018173f2;rx.internal.operators.OperatorMulticast; void rx.internal.operators.OperatorMulticast.connect(Action1<?superSubscription>);[94];TRUE;[];[128, 129, 131, 117, 118, 119, 120, 121, 122, 124, 125];[]
RxJava;1c47b0cb26e6d971eefa42ebb3479099236b0125;rx.concurrency.TestScheduler; void rx.concurrency.TestScheduler.triggerActions(long);[100];TRUE;[];[96, 97, 95];[]
elasticsearch-river-mongodb;3d4f99516ba3177f7d88a1f600923138a8b77cc8;org.elasticsearch.river.mongodb.MongoDBRiverDefinition; MongoDBRiverDefinition org.elasticsearch.river.mongodb.MongoDBRiverDefinition.parseSettings(String, String, RiverSettings, ScriptService);[714, 699, 683, 717, 686, 703];TRUE;[];[576, 515, 582, 617, 490, 635, 670];[]
elasticsearch-river-mongodb;3d4f99516ba3177f7d88a1f600923138a8b77cc8;org.elasticsearch.river.mongodb.Slurper; boolean org.elasticsearch.river.mongodb.Slurper.assignCollections();[288, 289, 290, 322, 291, 292, 293, 294, 295, 297, 298, 286, 287];TRUE;[];[315, 331, 302];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.MongoDBRiverDefinition; MongoDBRiverDefinition org.elasticsearch.river.mongodb.MongoDBRiverDefinition.parseSettings(String, String, RiverSettings, ScriptService);[534, 646, 535, 536, 538, 539, 540, 541, 526];TRUE;[];[561, 500, 567, 602, 475, 620, 655];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Indexer; Timestamp org.elasticsearch.river.mongodb.Indexer.applyAdvancedTransformation(QueueEntry, String);[321];TRUE;[];[288, 358, 331, 287];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Indexer; Timestamp org.elasticsearch.river.mongodb.Indexer.processBlockingQueue(QueueEntry);[176];TRUE;[];[161, 198, 201, 189];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Slurper; void org.elasticsearch.river.mongodb.Slurper.run();[105];TRUE;[];[145, 148];[]
elasticsearch-river-mongodb;6b6ce8e851c6613213c4508c3f277a80649e0c7b;org.elasticsearch.river.mongodb.Slurper; void org.elasticsearch.river.mongodb.Slurper.addToStream(Operation, Timestamp<?>, DBObject, String);[752, 747, 748, 751];TRUE;[];[736, 737, 738, 739, 740, 741, 742, 743];[]
hector;0588608e7a2bdf974c985ff546207104f672bf6c;me.prettyprint.cassandra.connection.client.HSaslThriftClient; HSaslThriftClient me.prettyprint.cassandra.connection.client.HSaslThriftClient.open();[96, 97, 94, 111, 95];TRUE;[];[122];[]
hector;a33a46506656a39d1b0f7780973905665d3b6145;me.prettyprint.cassandra.connection.client.HKerberosThriftClient; HKerberosThriftClient me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open();[88];TRUE;[];[69, 70, 71, 72, 73, 74, 75, 76];[]
hector;a33a46506656a39d1b0f7780973905665d3b6145;me.prettyprint.cassandra.connection.client.HThriftClient; HThriftClient me.prettyprint.cassandra.connection.client.HThriftClient.open();[164];TRUE;[];[147, 148, 149, 150, 151, 152, 169, 153, 154];[]
hector;213f7887ea70eabdf0705cf8454de29af89e8c38;me.prettyprint.cassandra.connection.HConnectionManager; void me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(Operation<?>);[267, 268];TRUE;[];[200];[]
titan;387c16ea05ef9fa312f37139228d2bbf61455ff4;com.thinkaurelius.titan.graphdb.database.serialize.SerializerInitialization; void com.thinkaurelius.titan.graphdb.database.serialize.SerializerInitialization.initialize(Serializer);[52, 53, 54, 55, 57];TRUE;[];[31];[]
titan;04edd7f0e7eab2e8255a497922e34dc707d84c19;com.thinkaurelius.titan.graphdb.transaction.StandardTitanTx; void com.thinkaurelius.titan.graphdb.transaction.StandardTitanTx.StandardTitanTx(StandardTitanGraph, TransactionConfiguration, BackendTransaction);[182, 183];TRUE;[];[197, 198, 199];[]
MPAndroidChart;af114d180da6ec5633d32c701ff5467f7629fcf3;com.xxmassdeveloper.mpchartexample.fragments.SimpleFragment; ScatterData com.xxmassdeveloper.mpchartexample.fragments.SimpleFragment.generateScatterData(int, float, int);[80, 91];TRUE;[];[73];[]
MPAndroidChart;af114d180da6ec5633d32c701ff5467f7629fcf3;com.xxmassdeveloper.mpchartexample.ScatterChartActivity; void com.xxmassdeveloper.mpchartexample.ScatterChartActivity.onProgressChanged(SeekBar, int, boolean);[178, 168, 188, 204, 173, 205];TRUE;[];[183, 186, 191];[]
MPAndroidChart;af114d180da6ec5633d32c701ff5467f7629fcf3;com.xxmassdeveloper.mpchartexample.ScatterChartActivity; void com.xxmassdeveloper.mpchartexample.ScatterChartActivity.onCreate(Bundle);[80, 86, 77, 63];TRUE;[];[57];[]
MPAndroidChart;9297923f09460d0484cd713b0abbeaea9b888ec0;com.xxmassdeveloper.mpchartexample.LineChartActivity2; void com.xxmassdeveloper.mpchartexample.LineChartActivity2.onCreate(Bundle);[126];TRUE;[];[117];[]
MPAndroidChart;9297923f09460d0484cd713b0abbeaea9b888ec0;com.xxmassdeveloper.mpchartexample.RadarChartActivitry; void com.xxmassdeveloper.mpchartexample.RadarChartActivitry.onCreate(Bundle);[59, 60, 61, 62];TRUE;[];[72];[]
MPAndroidChart;9297923f09460d0484cd713b0abbeaea9b888ec0;com.xxmassdeveloper.mpchartexample.StackedBarActivityNegative; void com.xxmassdeveloper.mpchartexample.StackedBarActivityNegative.onCreate(Bundle);[64, 65];TRUE;[];[];[]
MPAndroidChart;9297923f09460d0484cd713b0abbeaea9b888ec0;com.xxmassdeveloper.mpchartexample.LineChartActivity1;void com.xxmassdeveloper.mpchartexample.LineChartActivity1.onCreate(Bundle);[135];TRUE;[];[];[]
MPAndroidChart;9531ba69895cd64fce48038ffd8df2543eeea1d2;com.github.mikephil.charting.renderer.LineChartRenderer; void com.github.mikephil.charting.renderer.LineChartRenderer.drawData(Canvas);[];TRUE;[];[];[]
MPAndroidChart;9531ba69895cd64fce48038ffd8df2543eeea1d2;com.github.mikephil.charting.renderer.PieChartRenderer; void com.github.mikephil.charting.renderer.PieChartRenderer.drawData(Canvas);[];TRUE;[];[94];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.index.TransportIndexAction; WriteResult org.elasticsearch.action.index.TransportIndexAction.executeIndexRequestOnPrimary(IndexRequest, IndexShard, MappingUpdatedAction);[196];TRUE;[];[201];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.support.replication.ReplicationOperationTests; void org.elasticsearch.action.support.replication.ReplicationOperationTests.testReplication();[106, 108, 125, 126];TRUE;[];[116, 103];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.IndexSettings; void org.elasticsearch.index.IndexSettings.IndexSettings(IndexMetaData, Settings, Predicate<String>, IndexScopedSettings);[238];TRUE;[];[246, 269];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.bulk.TransportShardBulkAction; Tuple org.elasticsearch.action.bulk.TransportShardBulkAction.update(IndexMetaData, BulkShardRequest, IndexShard, long[], VersionType[], Translog.Location, int, BulkItemRequest);[268, 255];TRUE;[];[244, 249, 266, 254];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.support.replication.TransportReplicationAction; void org.elasticsearch.action.support.replication.TransportReplicationAction.doRun();[455, 458, 460];TRUE;[];[457, 459];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.support.replication.ReplicationOperation; Exception org.elasticsearch.action.support.replication.ReplicationOperation.execute();[98, 109];TRUE;[];[113, 98, 99, 101, 119, 108, 110];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.engine.InternalEngineTests; void org.elasticsearch.index.engine.InternalEngineTests.testRecoverFromForeignTranslog();[2091];TRUE;[];[2124];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.index.engine.InternalEngine; void org.elasticsearch.index.engine.InternalEngine.InternalEngine(EngineConfig);[134];TRUE;[];[161, 162, 163, 164];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.DocWriteResponse; void org.elasticsearch.action.DocWriteResponse.writeTo(StreamOutput);[140];TRUE;[];[141];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.DocWriteResponse; void org.elasticsearch.action.DocWriteResponse.readFrom(StreamInput);[129];TRUE;[];[130];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.DocWriteResponse; XContentBuilder org.elasticsearch.action.DocWriteResponse.toXContent(XContentBuilder, Params);[163, 164, 165, 166];TRUE;[];[160];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.cluster.metadata.MetaDataCreateIndexService; void org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.createIndex(CreateIndexClusterStateUpdateRequest, ActionListener<ClusterStateUpdateResponse>);[315];TRUE;[];[304, 305, 309, 310, 312, 346, 300];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.update.TransportUpdateAction; void org.elasticsearch.action.update.TransportUpdateAction.shardOperation(UpdateRequest, ActionListener<UpdateResponse>, int);[224, 185, 254];TRUE;[];[192, 249, 250];[]
elasticsearch;d896886973660785aac45275ddb110c1a6babc57;org.elasticsearch.action.delete.TransportDeleteAction; WriteResult org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(DeleteRequest, IndexShard);[136];TRUE;[];[140];[]
elasticsearch;3764b3ff800c94293aba0bb0fa18c7df80a764f7;org.elasticsearch.rest.action.cat.RestNodesAction; Table org.elasticsearch.rest.action.cat.RestNodesAction.getTableWithHeader(RestRequest);[];TRUE;[];[153, 154, 156, 157, 158, 159];[]
elasticsearch;3764b3ff800c94293aba0bb0fa18c7df80a764f7;org.elasticsearch.rest.action.cat.RestIndicesAction; Table org.elasticsearch.rest.action.cat.RestIndicesAction.getTableWithHeader(RestRequest);[];TRUE;[];[144, 147, 150, 153, 138, 141];[]
elasticsearch;3764b3ff800c94293aba0bb0fa18c7df80a764f7;org.elasticsearch.rest.action.cat.RestShardsAction; Table org.elasticsearch.rest.action.cat.RestShardsAction.getTableWithHeader(RestRequest);[];TRUE;[];[112, 113];[]
elasticsearch;0404db65e3497452886173957729c8e82cfd4a03;org.elasticsearch.test.ESSingleNodeTestCase; Node org.elasticsearch.test.ESSingleNodeTestCase.newNode();[171];TRUE;[];[173, 174];[]
elasticsearch;59cb67c7bd0ab6311115b20954e013412b676b29;org.elasticsearch.index.query.support.NestedInnerQueryParseSupport; void org.elasticsearch.index.query.support.NestedInnerQueryParseSupport.setPathLevel();[193, 195, 197, 200];TRUE;[];[199];[]
elasticsearch;59cb67c7bd0ab6311115b20954e013412b676b29;org.elasticsearch.index.query.MultiMatchQueryBuilder; void org.elasticsearch.index.query.MultiMatchQueryBuilder.doXContent(XContentBuilder, Params);[306, 367];TRUE;[];[];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTest; void org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTest.testSynonymsAnalysis();[65, 66, 67, 68, 69, 70, 71, 76];TRUE;[];[73, 75];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests; void realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests.testQueryModeCommonGramsAnalysis();[229];TRUE;[];[226, 228];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests; void realistic.testCommonGramsAnalysis.source.org.elasticsearch.index.analysis.commongrams.CommonGramsTokenFilterFactoryTests.testCommonGramsAnalysis();[144];TRUE;[];[141, 143];[]
elasticsearch;f3d63095dbcc985e24162fbac4ee0d6914dc757d;org.elasticsearch.index.analysis.KuromojiAnalysisTests; AnalysisService org.elasticsearch.index.analysis.KuromojiAnalysisTests.createAnalysisService();[196, 197, 198, 199, 200, 201, 202, 206];TRUE;[];[204, 207];[]
elasticsearch;36884807b3cc9d660db4da062275c7fdbec8ba67;org.elasticsearch.index.query.SimpleIndexQueryParserTests; void org.elasticsearch.index.query.SimpleIndexQueryParserTests.setup();[217];TRUE;[];[208];[]
fitnesse;4d9ba9d221d879507440feb084fa7521b95111ec;fitnesse.testsystems.slim.tables.SlimTableFactoryTest; void fitnesse.testsystems.slim.tables.SlimTableFactoryTest.setUp();[32, 31];TRUE;[];[38];[]
fitnesse;4d9ba9d221d879507440feb084fa7521b95111ec;fitnesse.testsystems.slim.tables.SlimTableFactory; void fitnesse.testsystems.slim.tables.SlimTableFactory.SlimTableFactory();[24, 25];TRUE;[];[31];[]
cloud-slang;20bac30d9bd76569aa6a4fa1e8261c1a9b5e6f76;io.cloudslang.lang.api.SlangImpl; Set io.cloudslang.lang.api.SlangImpl.getAllEventTypes();[116];TRUE;[];[123, 124, 125];[]
spring-boot;958a0a45f164601d01cb706c19f22ed3e25eff56;spring-boot-autoconfigure.src.main.java.org.springframework.boot.autoconfigure.MongoProperties;Builder org.springframework.boot.autoconfigure.MongoProperties.builder(MongoClientOptions);[272];TRUE;[];[261, 262, 263, 264, 265, 266, 267, 268, 271];[]
spring-boot;af20dc6cc45c032573413c401f9f73aa75371744;org.springframework.boot.loader.archive.ExplodedArchiveTests; void org.springframework.boot.loader.archive.ExplodedArchiveTests.getUrl();[];TRUE;[];[];[]
spring-boot;af20dc6cc45c032573413c401f9f73aa75371744;org.springframework.boot.loader.archive.ExplodedArchive; URL org.springframework.boot.loader.archive.ExplodedArchive.getUrl();[];TRUE;[];[];[]
spring-boot;ea8107b6a53fa60b5f23b33e1b6d2e88bb60133c;org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory; DeploymentManager org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainerFactory.createDeploymentManager(ServletContextInitializer);[357, 358, 359, 360, 345, 361, 362];TRUE;[];[364];[]
spring-boot;3444ebbc05b99a164474c14d6a6784f749514428;spring-boot.src.main.java.org.springframework.boot.context.SpringBootServletInitializer; WebApplicationContext org.springframework.boot.context.SpringBootServletInitializer.createRootApplicationContext(ServletContext);[99];TRUE;[];[121, 123];[]
spring-boot;074771ec125dd407af0282b92960e9e9e3377e84;spring-boot.src.main.java.org.springframework.boot.context.SpringBootServletInitializer; WebApplicationContext org.springframework.boot.context.SpringBootServletInitializer.createRootApplicationContext(ServletContext);[87];TRUE;[];[88];[]
spring-boot;fdd3f12ee0f92ac18844c08bf71df39feebb6673;spring-boot-autoconfigure.src.main.java.org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer; void org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(boolean);[114];TRUE;[];[110];[]
spring-boot;2d4e68a9777601bfb8309c94d8b74bc21be80ad1;src.main.java.org.springframework.boot.context.embedded.TomcatEmbeddedServletContainerFactory; void src.main.java.org.springframework.boot.context.embedded.TomcatEmbeddedServletContainerFactory.customizeConnector(Connector);[240, 241, 242, 243, 244, 246, 247, 248, 249];TRUE;[];[228];[]
quickml;bae968d9a85c0501ba8842a6f88e7fc2c6b78693;quickdt.experiments.OutOfTimeCrossValidatorRunner; PredictiveModelBuilder quickdt.experiments.OutOfTimeCrossValidatorRunner.getRandomForestBuilder(int, int);[];TRUE;[];[42, 43];[]
